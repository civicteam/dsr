const sift=require("sift").default,{definitions:ucaDefinitions}=require("@identity.com/uca");function DsrResolver(){return this.convertMongoOperatorToJavascript=a=>"$gt"===a?">":"$gte"===a?">=":"$lt"===a?"<":"$lte"===a?"<=":null,this.filterCredentials=(a,b)=>{const c=[];return a.credentialItems.forEach(a=>{if(a.constraints||!a.aggregate){const d="string"==typeof a?a:a.identifier,e=d.substring(0,d.indexOf("-"));if("credential"===e){const e=d.substring(11,d.lastIndexOf("-")),f=b.filter(sift({identifier:{$regex:`${e}`}}));if(a.identifier){const b=[];if(a.constraints.meta){if(a.constraints.meta.issued){const c=Object.keys(a.constraints.meta.issued.is)[0],d=this.convertMongoOperatorToJavascript(Object.keys(a.constraints.meta.issued.is)[0]),e=a.constraints.meta.issued.is[c],f={};f.$where=`new Date(this.issued).getTime() ${d} ${e}`,b.push(f)}if(a.constraints.meta.expiry){const c=Object.keys(a.constraints.meta.expiry.is)[0],d=this.convertMongoOperatorToJavascript(Object.keys(a.constraints.meta.expiry.is)[0]),e=a.constraints.meta.expiry.is[c],f={};f.$where=`new Date(this.expiry).getTime() ${d} ${e}`,b.push(f)}if(a.constraints.meta.issuer){const c=Object.keys(a.constraints.meta.issuer.is)[0],d=a.constraints.meta.issuer.is[c],e={};e.issuer=d,b.push(e)}}a.constraints&&a.constraints.claims&&a.constraints.claims.forEach(a=>{const c=`claim.${a.path}`,d=Object.keys(a.is)[0],e=a.is[d],f={};f[c]=e,b.push(f)});c.push(...f.filter(sift({$and:b})))}else c.push(...f)}else if("claim"===e){const e=d.substring(6,d.lastIndexOf("-")),f=ucaDefinitions.find(a=>a.identifier===e),g=[],h=[];if(f.alsoKnown)f.alsoKnown.forEach(a=>{const c=a.substring(a.indexOf(":")+1,a.lastIndexOf(":")).toLowerCase(),d=a.substring(a.lastIndexOf(":")+1),e={};e[`claim.${c}.${d}`]={$exists:!0},g.push(...b.filter(sift(e)))});else{const{identifier:a}=f,c=a.substring(a.indexOf(":")+1,a.lastIndexOf(":")).toLowerCase(),d=a.substring(a.lastIndexOf(":")+1),e={};e[`claim.${c}.${d}`]={$exists:!0},g.push(...b.filter(sift(e)))}if(a.identifier){const b=a.identifier.substring(a.identifier.indexOf(":")+1,a.identifier.lastIndexOf(":")).toLowerCase();a.constraints&&a.constraints.claims&&a.constraints.claims.forEach(a=>{const c=`claim.${b}.${a.path}`,d=Object.keys(a.is)[0],e=a.is[d],f={};f[c]=e,h.push(f)});c.push(...g.filter(sift({$and:h})))}else c.push(...g)}}}),c},this}module.exports=DsrResolver;